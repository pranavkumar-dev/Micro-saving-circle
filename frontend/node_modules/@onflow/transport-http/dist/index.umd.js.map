{"version":3,"file":"index.umd.js","sources":["../src/send/utils.js","../src/utils/combine-urls.ts","../src/send/http-request.js","../src/send/send-execute-script.js","../src/send/send-get-account.js","../src/send/send-get-block-header.js","../src/send/send-get-block.js","../src/send/send-get-collection.js","../src/send/send-get-events.js","../src/send/send-get-transaction.js","../src/send/send-get-transaction-status.js","../src/send/send-ping.ts","../src/send/send-transaction.js","../src/send/send-get-network-parameters.js","../src/send/send-get-node-version-info.ts","../src/subscribe/websocket.ts","../src/send/connect-ws.ts","../src/send/connect-subscribe-events.ts","../src/send/send-http.ts","../src/subscribe/models.ts","../src/subscribe/subscription-manager.ts","../src/subscribe/handlers/types.ts","../src/subscribe/handlers/blocks.ts","../src/subscribe/handlers/block-headers.ts","../src/subscribe/handlers/block-digests.ts","../src/subscribe/handlers/account-statuses.ts","../src/subscribe/handlers/transaction-statuses.ts","../src/subscribe/handlers/events.ts","../src/subscribe/subscribe.ts","../src/transport.ts"],"sourcesContent":["export function safeParseJSON(data) {\n  try {\n    return JSON.parse(data)\n  } catch {\n    return null\n  }\n}\n","/**\n * This file was taken from the Axios project and modified to work with TypeScript/ES6 modules.\n *\n * The original file can be found on GitHub:\n * https://github.com/axios/axios/blob/fe7d09bb08fa1c0e414956b7fc760c80459b0a43/lib/helpers/combineURLs.js\n *\n * The original license is included below:\n *\n * Copyright (c) 2014 Matt Zabriskie\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param baseURL The base URL\n * @param relativeURL The relative URL\n * @returns The combined URL\n */\nexport function combineURLs(baseURL: string, relativeURL?: string): string {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, \"\") + \"/\" + relativeURL.replace(/^\\/+/, \"\")\n    : baseURL\n}\n","import * as logger from \"@onflow/util-logger\"\nimport fetchTransport from \"cross-fetch\"\nimport {safeParseJSON} from \"./utils\"\nimport {combineURLs} from \"../utils/combine-urls\"\n\nconst AbortController =\n  globalThis.AbortController || require(\"abort-controller\")\n\nexport class HTTPRequestError extends Error {\n  constructor({\n    error,\n    hostname,\n    path,\n    method,\n    requestBody,\n    responseBody,\n    responseStatusText,\n    statusCode,\n  }) {\n    const msg = `\n      HTTP Request Error: An error occurred when interacting with the Access API.\n      ${error ? `error=${error}` : \"\"}\n      ${hostname ? `hostname=${hostname}` : \"\"}\n      ${path ? `path=${path}` : \"\"}\n      ${method ? `method=${method}` : \"\"}\n      ${requestBody ? `requestBody=${requestBody}` : \"\"}\n      ${responseBody ? `responseBody=${responseBody}` : \"\"}\n      ${responseStatusText ? `responseStatusText=${responseStatusText}` : \"\"}\n      ${statusCode ? `statusCode=${statusCode}` : \"\"}\n    `\n    super(msg)\n\n    this.name = \"HTTP Request Error\"\n    this.statusCode = statusCode\n    this.errorMessage = error\n  }\n}\n\n/**\n * Creates an HTTP Request to be sent to a REST Access API via Fetch API.\n *\n * @param {object} options - Options for the HTTP Request\n * @param {String} options.hostname - Access API Hostname\n * @param {String} options.path - Path to the resource on the Access API\n * @param {String} options.method - HTTP Method\n * @param {object} options.body - HTTP Request Body\n * @param {object} [options.headers] - HTTP Request Headers\n * @param {boolean} [options.enableRequestLogging=true] - Enable/Disable request logging\n * @param {number} [options.retryLimit=5] - Number of times to retry request\n * @param {number} [options.retryIntervalMs=1000] - Time in milliseconds to wait before retrying request\n * @param {number} [options.timeoutLimit=30000] - Time in milliseconds to wait before timing out request\n *\n * @returns JSON object response from Access API.\n */\nexport async function httpRequest({\n  hostname,\n  path,\n  method,\n  body,\n  headers,\n  retryLimit = 5,\n  retryIntervalMs = 1000,\n  timeoutLimit = 30000,\n  enableRequestLogging = true,\n}) {\n  const bodyJSON = body ? JSON.stringify(body) : null\n\n  function makeRequest() {\n    const controller = new AbortController()\n    const fetchTimeout = setTimeout(() => {\n      controller.abort()\n    }, timeoutLimit)\n\n    return fetchTransport(combineURLs(hostname, path).toString(), {\n      method: method,\n      body: bodyJSON,\n      headers,\n      signal: controller.signal,\n    })\n      .then(async res => {\n        if (res.ok) {\n          return res.json()\n        }\n\n        const responseText = await res.text().catch(() => null)\n        const response = safeParseJSON(responseText)\n\n        throw new HTTPRequestError({\n          error: response?.message,\n          hostname,\n          path,\n          method,\n          requestBody: bodyJSON,\n          responseBody: responseText,\n          responseStatusText: res.statusText,\n          statusCode: res.status,\n        })\n      })\n      .catch(async e => {\n        if (e instanceof HTTPRequestError) {\n          throw e\n        }\n\n        if (e.name === \"AbortError\") {\n          throw e\n        }\n\n        // Show AN error for all network errors\n        if (enableRequestLogging) {\n          await logger.log({\n            title: \"Access Node Error\",\n            message: `The provided access node ${hostname} does not appear to be a valid REST/HTTP access node.\n  Please verify that you are not unintentionally using a GRPC access node.\n  See more here: https://docs.onflow.org/fcl/reference/sdk-guidelines/#connect`,\n            level: logger.LEVELS.error,\n          })\n        }\n\n        throw new HTTPRequestError({\n          error: e?.message,\n          hostname,\n          path,\n          method,\n          requestBody: bodyJSON,\n        })\n      })\n      .finally(() => {\n        clearTimeout(fetchTimeout)\n      })\n  }\n\n  async function requestLoop(retryAttempt = 0) {\n    try {\n      const resp = await makeRequest()\n      return resp\n    } catch (error) {\n      const retryStatusCodes = [408, 429, 500, 502, 503, 504]\n\n      if (\n        error.name === \"AbortError\" ||\n        retryStatusCodes.includes(error.statusCode)\n      ) {\n        return await new Promise((resolve, reject) => {\n          if (retryAttempt < retryLimit) {\n            if (enableRequestLogging) {\n              console.warn(\n                `Access node unavailable, retrying in ${retryIntervalMs} ms...`\n              )\n            }\n            setTimeout(() => {\n              resolve(requestLoop(retryAttempt + 1))\n            }, retryIntervalMs)\n          } else {\n            reject(error)\n          }\n        })\n      } else {\n        throw error\n      }\n    }\n  }\n\n  // Keep retrying request until server available or max attempts exceeded\n  return await requestLoop()\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendExecuteScriptAtBlockIDRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/scripts?block_id=${ix.block.id}`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: ix.message.arguments.map(arg =>\n        context.Buffer.from(\n          JSON.stringify(ix.arguments[arg].asArgument)\n        ).toString(\"base64\")\n      ),\n    },\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendExecuteScriptAtBlockHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/scripts?block_height=${ix.block.height}`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: ix.message.arguments.map(arg =>\n        context.Buffer.from(\n          JSON.stringify(ix.arguments[arg].asArgument)\n        ).toString(\"base64\")\n      ),\n    },\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendExecuteScriptAtLatestBlockRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/scripts?block_height=${ix.block.isSealed ? \"sealed\" : \"final\"}`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: ix.message.arguments.map(arg =>\n        context.Buffer.from(\n          JSON.stringify(ix.arguments[arg].asArgument)\n        ).toString(\"base64\")\n      ),\n    },\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  ret.encodedData = JSON.parse(context.Buffer.from(res, \"base64\").toString())\n\n  return ret\n}\n\nexport async function sendExecuteScript(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Execute Script Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Execute Script Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Execute Script Error: context.Buffer must be defined.`\n  )\n\n  ix = await ix\n\n  if (ix.block.id) {\n    return await sendExecuteScriptAtBlockIDRequest(ix, context, opts)\n  } else if (ix.block.height) {\n    return await sendExecuteScriptAtBlockHeightRequest(ix, context, opts)\n  } else {\n    return await sendExecuteScriptAtLatestBlockRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nconst HashAlgorithmIDs = {\n  SHA2_256: 1,\n  SHA2_384: 2,\n  SHA3_256: 3,\n  SHA3_384: 4,\n  KMAC128_BLS_BLS12_381: 5,\n}\n\nconst SignatureAlgorithmIDs = {\n  ECDSA_P256: 1,\n  ECDSA_secp256k1: 2,\n  BLS_BLS12_381: 3,\n}\n\nasync function sendGetAccountAtBlockHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/accounts/${ix.account.addr}?block_height=${ix.block.height}&expand=contracts,keys`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetAccountAtLatestBlockRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/accounts/${ix.account.addr}?block_height=${ix.block.isSealed ? \"sealed\" : \"final\"}&expand=contracts,keys`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  const unwrapContracts = contracts => {\n    const c = {}\n    if (!contracts) return c\n    for (let key of Object.keys(contracts)) {\n      c[key] = context.Buffer.from(contracts[key], \"base64\").toString()\n    }\n    return c\n  }\n\n  ret.account = {\n    address: res.address,\n    balance: Number(res.balance),\n    code: \"\",\n    contracts: unwrapContracts(res.contracts),\n    keys:\n      res.keys?.map(key => ({\n        index: Number(key.index),\n        publicKey: key.public_key.replace(/^0x/, \"\"),\n        signAlgo: SignatureAlgorithmIDs[key.signing_algorithm],\n        signAlgoString: key.signing_algorithm,\n        hashAlgo: HashAlgorithmIDs[key.hashing_algorithm],\n        hashAlgoString: key.hashing_algorithm,\n        sequenceNumber: Number(key.sequence_number),\n        weight: Number(key.weight),\n        revoked: key.revoked,\n      })) ?? [],\n  }\n\n  return ret\n}\n\nexport async function sendGetAccount(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Get Account Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Get Account Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Account Error: context.Buffer must be defined.`\n  )\n\n  ix = await ix\n\n  if (ix.block.height !== null) {\n    return await sendGetAccountAtBlockHeightRequest(ix, context, opts)\n  } else {\n    return await sendGetAccountAtLatestBlockRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendGetBlockHeaderByIDRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks/${ix.block.id}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetBlockHeaderByHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${ix.block.height}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetLatestBlockHeaderRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const height = ix.block?.isSealed ? \"sealed\" : \"final\"\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${height}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  const block = res.length ? res[0] : null\n\n  const ret = context.response()\n  ret.tag = ix.tag\n  ret.blockHeader = {\n    id: block.header.id,\n    parentId: block.header.parent_id,\n    height: Number(block.header.height),\n    timestamp: block.header.timestamp,\n  }\n\n  return ret\n}\n\nexport async function sendGetBlockHeader(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Block Header Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Block Header Error: context.response must be defined.`\n  )\n\n  ix = await ix\n\n  const interactionHasBlockID = ix.block.id !== null\n  const interactionHasBlockHeight = ix.block.height !== null\n\n  if (interactionHasBlockID) {\n    return await sendGetBlockHeaderByIDRequest(ix, context, opts)\n  } else if (interactionHasBlockHeight) {\n    return await sendGetBlockHeaderByHeightRequest(ix, context, opts)\n  } else {\n    return await sendGetLatestBlockHeaderRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendGetBlockByIDRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks/${ix.block.id}?expand=payload`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetBlockByHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${ix.block.height}&expand=payload`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetBlockRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const height = ix.block?.isSealed ? \"sealed\" : \"final\"\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${height}&expand=payload`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  const block = res.length ? res[0] : null\n\n  const ret = context.response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: block.header.id,\n    parentId: block.header.parent_id,\n    height: Number(block.header.height),\n    timestamp: block.header.timestamp,\n    parentVoterSignature: block.header.parent_voter_signature,\n    collectionGuarantees: block.payload.collection_guarantees.map(\n      collectionGuarantee => ({\n        collectionId: collectionGuarantee.collection_id,\n        signerIds: collectionGuarantee.signer_ids,\n      })\n    ),\n    blockSeals: block.payload.block_seals.map(blockSeal => ({\n      blockId: blockSeal.block_id,\n      executionReceiptId: blockSeal.result_id,\n    })),\n  }\n\n  return ret\n}\n\nexport async function sendGetBlock(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Get Block Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Get Block Error: context.response must be defined.`\n  )\n\n  ix = await ix\n\n  const interactionHasBlockID = ix.block.id !== null\n  const interactionHasBlockHeight = ix.block.height !== null\n\n  if (interactionHasBlockID) {\n    return await sendGetBlockByIDRequest(ix, context, opts)\n  } else if (interactionHasBlockHeight) {\n    return await sendGetBlockByHeightRequest(ix, context, opts)\n  } else {\n    return await sendGetBlockRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nexport async function sendGetCollection(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Collection Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Collection Error: context.response must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/collections/${ix.collection.id}?expand=transactions`,\n    method: \"GET\",\n    body: null,\n  })\n\n  const ret = context.response()\n  ret.tag = ix.tag\n  ret.collection = {\n    id: res.id,\n    transactionIds: res.transactions.map(transaction => transaction.id),\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendGetEventsForHeightRangeRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/events?type=${ix.events.eventType}&start_height=${ix.events.start}&end_height=${ix.events.end}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetEventsForBlockIDsRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/events?type=${\n      ix.events.eventType\n    }&block_ids=${ix.events.blockIds.join(\",\")}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  ret.events = []\n  res.forEach(block =>\n    block.events\n      ? block.events.forEach(event =>\n          ret.events.push({\n            blockId: block.block_id,\n            blockHeight: Number(block.block_height),\n            blockTimestamp: block.block_timestamp,\n            type: event.type,\n            transactionId: event.transaction_id,\n            transactionIndex: Number(event.transaction_index),\n            eventIndex: Number(event.event_index),\n            payload: JSON.parse(\n              context.Buffer.from(event.payload, \"base64\").toString()\n            ),\n          })\n        )\n      : null\n  )\n\n  return ret\n}\n\nexport async function sendGetEvents(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Get Events Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Get Events Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Events Error: context.Buffer must be defined.`\n  )\n\n  ix = await ix\n\n  const interactionContainsBlockHeightRange = ix.events.start !== null\n  const interactionContainsBlockIDsList =\n    Array.isArray(ix.events.blockIds) && ix.events.blockIds.length > 0\n\n  invariant(\n    interactionContainsBlockHeightRange || interactionContainsBlockIDsList,\n    \"SendGetEventsError: Unable to determine which get events request to send. Either a block height range, or block IDs must be specified.\"\n  )\n\n  if (interactionContainsBlockHeightRange) {\n    return await sendGetEventsForHeightRangeRequest(ix, context, opts)\n  } else {\n    return await sendGetEventsForBlockIDsRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nexport async function sendGetTransaction(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Transaction Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Transaction Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Transaction Error: context.Buffer must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/transactions/${ix.transaction.id}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  const unwrapKey = key => ({\n    address: key.address,\n    keyId: Number(key.key_index),\n    sequenceNumber: Number(key.sequence_number),\n  })\n\n  const unwrapSignature = sig => ({\n    address: sig.address,\n    keyId: Number(sig.key_index),\n    signature: sig.signature,\n  })\n\n  const unwrapArg = arg =>\n    JSON.parse(context.Buffer.from(arg, \"base64\").toString())\n\n  let ret = context.response()\n  ret.tag = ix.tag\n  ret.transaction = {\n    script: context.Buffer.from(res.script, \"base64\").toString(),\n    args: [...res.arguments.map(unwrapArg)],\n    referenceBlockId: res.reference_block_id,\n    gasLimit: Number(res.gas_limit),\n    payer: res.payer,\n    proposalKey: res.proposal_key\n      ? unwrapKey(res.proposal_key)\n      : res.proposal_key,\n    authorizers: res.authorizers,\n    payloadSignatures: [...res.payload_signatures.map(unwrapSignature)],\n    envelopeSignatures: [...res.envelope_signatures.map(unwrapSignature)],\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nconst STATUS_MAP = {\n  UNKNOWN: 0,\n  PENDING: 1,\n  FINALIZED: 2,\n  EXECUTED: 3,\n  SEALED: 4,\n  EXPIRED: 5,\n}\n\nexport async function sendGetTransactionStatus(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Transaction Status Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Transaction Status Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Transaction Status Error: context.Buffer must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/transaction_results/${ix.transaction.id}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  let ret = context.response()\n  ret.tag = ix.tag\n  ret.transactionStatus = {\n    blockId: res.block_id,\n    status: STATUS_MAP[res.status.toUpperCase()] || \"\",\n    statusString: res.status.toUpperCase(),\n    statusCode: res.status_code,\n    errorMessage: res.error_message,\n    events: res.events.map(event => ({\n      type: event.type,\n      transactionId: event.transaction_id,\n      transactionIndex: Number(event.transaction_index),\n      eventIndex: Number(event.event_index),\n      payload: JSON.parse(\n        context.Buffer.from(event.payload, \"base64\").toString()\n      ),\n    })),\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\nimport {Interaction} from \"@onflow/typedefs\"\n\nexport interface ISendPingContext {\n  response?: Function\n}\n\ninterface ISendPingOpts {\n  node?: string\n  httpRequest?: any\n}\n\nexport async function sendPing(\n  ix: Interaction,\n  context: ISendPingContext = {},\n  opts: ISendPingOpts = {}\n) {\n  invariant(\n    Boolean(opts.node),\n    `SDK Send Ping Error: opts.node must be defined.`\n  )\n  invariant(\n    Boolean(context.response),\n    `SDK Send Ping Error: context.response must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  await httpRequest({\n    hostname: opts.node,\n    path: \"/v1/blocks?height=sealed\",\n    method: \"GET\",\n    body: null,\n  })\n\n  let ret = typeof context?.response === \"function\" ? context.response() : {}\n  ret.tag = ix.tag\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nconst idof = acct => `${withPrefix(acct.addr)}-${acct.keyId}`\n\nexport async function sendTransaction(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Transaction Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Transaction Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Transaction Error: context.Buffer must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  // Apply Non Payer Signatures to Payload Signatures\n  let payloadSignatures = []\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (!acct.role.payer && acct.signature != null) {\n        const signature = {\n          address: sansPrefix(acct.addr),\n          key_index: String(acct.keyId),\n          signature: context.Buffer.from(acct.signature, \"hex\").toString(\n            \"base64\"\n          ),\n        }\n        if (\n          !payloadSignatures.find(\n            existingSignature =>\n              existingSignature.address === signature.address &&\n              existingSignature.key_index === signature.key_index &&\n              existingSignature.signature === signature.signature\n          )\n        ) {\n          payloadSignatures.push(signature)\n        }\n      }\n    } catch (error) {\n      console.error(\"SDK HTTP Send Error: Trouble applying payload signature\", {\n        acct,\n        ix,\n      })\n      throw error\n    }\n  }\n\n  // Apply Payer Signatures to Envelope Signatures\n  let envelopeSignatures = {}\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (acct.role.payer && acct.signature != null) {\n        let id = acct.tempId || idof(acct)\n        envelopeSignatures[id] = envelopeSignatures[id] || {\n          address: sansPrefix(acct.addr),\n          key_index: String(acct.keyId),\n          signature: context.Buffer.from(acct.signature, \"hex\").toString(\n            \"base64\"\n          ),\n        }\n      }\n    } catch (error) {\n      console.error(\n        \"SDK HTTP Send Error: Trouble applying envelope signature\",\n        {acct, ix}\n      )\n      throw error\n    }\n  }\n  envelopeSignatures = Object.values(envelopeSignatures)\n\n  var t1 = Date.now()\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/transactions`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: [\n        ...ix.message.arguments.map(arg =>\n          context.Buffer.from(\n            JSON.stringify(ix.arguments[arg].asArgument)\n          ).toString(\"base64\")\n        ),\n      ],\n      reference_block_id: ix.message.refBlock ? ix.message.refBlock : null,\n      gas_limit: String(ix.message.computeLimit),\n      payer: sansPrefix(\n        ix.accounts[Array.isArray(ix.payer) ? ix.payer[0] : ix.payer].addr\n      ),\n      proposal_key: {\n        address: sansPrefix(ix.accounts[ix.proposer].addr),\n        key_index: String(ix.accounts[ix.proposer].keyId),\n        sequence_number: String(ix.accounts[ix.proposer].sequenceNum),\n      },\n      authorizers: ix.authorizations\n        .map(tempId => ix.accounts[tempId].addr)\n        .reduce((prev, current) => {\n          return prev.find(item => item === current) ? prev : [...prev, current]\n        }, [])\n        .map(sansPrefix),\n      payload_signatures: payloadSignatures,\n      envelope_signatures: envelopeSignatures,\n    },\n  })\n  var t2 = Date.now()\n\n  let ret = context.response()\n  ret.tag = ix.tag\n  ret.transactionId = res.id\n\n  if (typeof window !== \"undefined\" && typeof CustomEvent !== \"undefined\") {\n    window.dispatchEvent(\n      new CustomEvent(\"FLOW::TX\", {\n        detail: {txId: ret.transactionId, delta: t2 - t1},\n      })\n    )\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nexport async function sendGetNetworkParameters(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Network Parameters Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Network Parameters Error: context.response must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/network/parameters`,\n    method: \"GET\",\n    body: null,\n    enableRequestLogging: opts.enableRequestLogging ?? true,\n  })\n\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  ret.networkParameters = {\n    chainId: res.chain_id,\n  }\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\nimport {Interaction} from \"@onflow/typedefs\"\n\nexport async function sendGetNodeVersionInfo(\n  ix: Interaction | Promise<Interaction>,\n  context: any = {},\n  opts: any = {}\n) {\n  invariant(\n    opts.node,\n    `SDK Send Get Node Version Info Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Node Verison Info Error: context.response must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/node_version_info`,\n    method: \"GET\",\n  })\n\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  ret.nodeVersionInfo = {\n    semver: res.semver,\n    commit: res.commit,\n    sporkId: res.spork_id,\n    protocolVersion: parseInt(res.protocol_version),\n    sporkRootBlockHeight: parseInt(res.spork_root_block_height),\n    nodeRootBlockHeight: parseInt(res.node_root_block_height),\n  }\n  return ret\n}\n","import _WebSocket from \"isomorphic-ws\"\n\nexport const WebSocket = _WebSocket as (new (\n  url: string | URL,\n  protocols?: string | string[] | undefined\n) => WebSocket) &\n  WebSocket\n","import {EventEmitter} from \"events\"\nimport {safeParseJSON} from \"./utils\"\nimport {StreamConnection} from \"@onflow/typedefs\"\nimport {WebSocket} from \"../subscribe/websocket\"\n\nexport class WebsocketError extends Error {\n  code?: number\n  reason?: string\n  wasClean?: boolean\n\n  constructor({\n    code,\n    reason,\n    message,\n    wasClean,\n  }: {\n    code?: number\n    reason?: string\n    message?: string\n    wasClean?: boolean\n  }) {\n    const msg = `\n      connectWs: connection closed with error${message ? `: ${message}` : \"\"}\n      ${code ? `code: ${code}` : \"\"}\n      ${reason ? `reason: ${reason}` : \"\"}\n      ${wasClean ? `wasClean: ${wasClean}` : \"\"}\n    `\n    super(msg)\n    this.name = \"WebsocketError\"\n    this.code = code\n    this.reason = reason\n    this.wasClean = false\n  }\n}\n\ntype WebSocketConnection<T> = StreamConnection<{\n  data: T\n}>\n\nexport function connectWs<T>({\n  hostname,\n  path,\n  params,\n  getParams,\n  retryLimit = 5,\n  retryIntervalMs = 1000,\n}: {\n  hostname: string\n  path: string\n  params?: Record<string, string>\n  getParams?: () => Record<string, string> | undefined\n  retryLimit?: number\n  retryIntervalMs?: number\n}): WebSocketConnection<T> {\n  if (getParams && params) {\n    throw new Error(\"connectWs: cannot specify both params and getParams\")\n  }\n  let outputEmitter = new EventEmitter()\n\n  let retryCount = 0\n  const resolveParams = getParams || (() => params)\n  let close = () => {}\n\n  ;(function connect() {\n    let userClosed = false\n    let hasOpened = false\n\n    // Build a websocket connection with correct protocol & params\n    const url = buildConnectionUrl(hostname, path, resolveParams())\n    const ws = new WebSocket(url)\n\n    ws.onmessage = function (e) {\n      const data = safeParseJSON(e.data)\n      if (data) {\n        outputEmitter.emit(\"data\", data)\n      } else {\n        outputEmitter.emit(\n          \"error\",\n          new WebsocketError({message: \"invalid JSON data\"})\n        )\n        this.close()\n      }\n    }\n\n    ws.onclose = function (e) {\n      if (userClosed) {\n        outputEmitter.emit(\"close\")\n        outputEmitter.removeAllListeners()\n        return\n      }\n\n      if (!hasOpened) {\n        if (retryCount < retryLimit) {\n          retryCount++\n          setTimeout(connect, retryIntervalMs)\n        } else {\n          outputEmitter.emit(\n            \"error\",\n            new WebsocketError({\n              wasClean: e.wasClean,\n              code: e.code,\n              reason: e.reason,\n              message: \"failed to connect\",\n            })\n          )\n\n          // Emit close event on next tick so that the error event is emitted first\n          setTimeout(() => {\n            outputEmitter.emit(\"close\")\n            outputEmitter.removeAllListeners()\n          })\n        }\n      } else {\n        // If the connection was established before closing, attempt to reconnect\n        setTimeout(connect, retryIntervalMs)\n      }\n    }\n\n    ws.onopen = function () {\n      hasOpened = true\n      retryCount = 0\n    }\n\n    close = () => {\n      userClosed = true\n      ws.close()\n    }\n  })()\n\n  return {\n    on(event: \"data\" | \"close\" | \"error\", listener: any) {\n      outputEmitter.on(event, listener)\n      return this\n    },\n    off(event: \"data\" | \"close\" | \"error\", listener: any) {\n      outputEmitter.off(event, listener)\n      return this\n    },\n    close() {\n      close()\n    },\n  }\n}\n\nexport function buildConnectionUrl(\n  hostname: string,\n  path?: string,\n  params?: Record<\n    string,\n    string | number | string[] | number[] | null | undefined\n  >\n) {\n  const url = new URL(path || \"\", hostname)\n  if (url.protocol === \"https:\") {\n    url.protocol = \"wss:\"\n  } else if (url.protocol === \"http:\") {\n    url.protocol = \"ws:\"\n  }\n\n  Object.entries(params || {}).forEach(([key, value]) => {\n    if (value) {\n      let formattedValue: string\n      if (Array.isArray(value)) {\n        formattedValue = value.join(\",\")\n      } else {\n        formattedValue = value.toString()\n      }\n      url.searchParams.append(key, formattedValue)\n    }\n  })\n\n  return url.toString()\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {connectWs as defaultConnectWs} from \"./connect-ws\"\nimport {EventEmitter} from \"events\"\nimport {BlockHeartbeat, Interaction, StreamConnection} from \"@onflow/typedefs\"\n\ntype RawSubscribeEventsStream = StreamConnection<{\n  data: {\n    events: any[]\n    heartbeat: BlockHeartbeat\n  }\n}>\n\nfunction constructData(ix: Interaction, context: any, data: any) {\n  const response = context.response()\n  response.tag = ix.tag\n\n  response.events =\n    data.Events?.length > 0\n      ? data.Events.map((event: any) => ({\n          blockId: data.BlockID,\n          blockHeight: Number(data.Height),\n          blockTimestamp: data.BlockTimestamp,\n          type: event.Type,\n          transactionId: event.TransactionID,\n          transactionIndex: Number(event.TransactionIndex),\n          eventIndex: Number(event.EventIndex),\n          payload: JSON.parse(\n            context.Buffer.from(event.Payload, \"base64\").toString()\n          ),\n        }))\n      : null\n  response.heartbeat = {\n    blockId: data.BlockID,\n    blockHeight: Number(data.Height),\n    blockTimestamp: data.BlockTimestamp,\n  }\n\n  return response\n}\n\nfunction constructResponse(ix: Interaction, context: any, stream: any) {\n  const response = context.response()\n  response.tag = ix.tag\n\n  response.streamConnection = stream\n\n  return response\n}\n\nexport async function connectSubscribeEvents(\n  ix: Interaction | Promise<Interaction>,\n  context: any = {},\n  opts: any = {}\n) {\n  invariant(opts.node, `SDK Send Get Events Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Get Events Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Events Error: context.Buffer must be defined.`\n  )\n\n  const resolvedIx = await ix\n\n  const connectWs: typeof defaultConnectWs = opts.connectWs || defaultConnectWs\n  const outputEmitter = new EventEmitter()\n  let lastBlockHeight: string | null = null\n\n  // Connect to the websocket & provide reconnection parameters\n  const connection = connectWs<any>({\n    hostname: opts.node,\n    path: `/v1/subscribe_events`,\n    getParams: () => {\n      const params: Record<string, any> = {\n        event_types: resolvedIx.subscribeEvents?.eventTypes,\n        addresses: resolvedIx.subscribeEvents?.addresses,\n        contracts: resolvedIx.subscribeEvents?.contracts,\n        heartbeat_interval: resolvedIx.subscribeEvents?.heartbeatInterval,\n      }\n\n      // If the lastBlockId is set, use it to resume the stream\n      if (lastBlockHeight) {\n        params.start_height = lastBlockHeight + 1\n      } else {\n        params.start_block_id = resolvedIx.subscribeEvents?.startBlockId\n        params.start_height = resolvedIx.subscribeEvents?.startHeight\n      }\n\n      return params\n    },\n  })\n\n  // Map the connection to a formatted response stream\n  connection.on(\"data\", (data: any) => {\n    const responseData = constructData(resolvedIx, context, data)\n    lastBlockHeight = responseData.heartbeat.blockHeight\n    outputEmitter.emit(\"data\", responseData)\n  })\n  connection.on(\"error\", (error: Error) => {\n    outputEmitter.emit(\"error\", error)\n  })\n  connection.on(\"close\", () => {\n    outputEmitter.emit(\"close\")\n  })\n\n  const responseStream: RawSubscribeEventsStream = {\n    on(event: \"data\" | \"error\" | \"close\" | \"open\", listener: any) {\n      outputEmitter.on(event, listener)\n      return this\n    },\n    off(event: \"data\" | \"error\" | \"close\" | \"open\", listener: any) {\n      outputEmitter.off(event, listener)\n      return this\n    },\n    close() {\n      connection.close()\n    },\n  }\n  return constructResponse(resolvedIx, context, responseStream)\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {sendTransaction} from \"./send-transaction.js\"\nimport {sendGetTransactionStatus} from \"./send-get-transaction-status.js\"\nimport {sendGetTransaction} from \"./send-get-transaction.js\"\nimport {sendExecuteScript} from \"./send-execute-script.js\"\nimport {sendGetAccount} from \"./send-get-account.js\"\nimport {sendGetEvents} from \"./send-get-events.js\"\nimport {connectSubscribeEvents} from \"./connect-subscribe-events.js\"\nimport {sendGetBlock} from \"./send-get-block.js\"\nimport {sendGetBlockHeader} from \"./send-get-block-header.js\"\nimport {sendGetCollection} from \"./send-get-collection.js\"\nimport {sendPing, ISendPingContext} from \"./send-ping.js\"\nimport {sendGetNetworkParameters} from \"./send-get-network-parameters.js\"\nimport {Interaction} from \"@onflow/typedefs\"\nimport {sendGetNodeVersionInfo} from \"./send-get-node-version-info.js\"\n\ninterface InteractionModule {\n  isTransaction: (ix: Interaction) => boolean\n  isGetTransactionStatus: (ix: Interaction) => boolean\n  isGetTransaction: (ix: Interaction) => boolean\n  isScript: (ix: Interaction) => boolean\n  isGetAccount: (ix: Interaction) => boolean\n  isGetEvents: (ix: Interaction) => boolean\n  isGetBlock: (ix: Interaction) => boolean\n  isGetBlockHeader: (ix: Interaction) => boolean\n  isGetCollection: (ix: Interaction) => boolean\n  isPing: (ix: Interaction) => boolean\n  isGetNetworkParameters: (ix: Interaction) => boolean\n  isSubscribeEvents?: (ix: Interaction) => boolean\n  isGetNodeVersionInfo?: (ix: Interaction) => boolean\n}\ninterface IContext extends ISendPingContext {\n  ix: InteractionModule\n}\n\ninterface IOptsCommon {\n  node?: string\n}\n\ninterface IOpts extends IOptsCommon {\n  sendTransaction?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetTransactionStatus?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetTransaction?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendExecuteScript?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetAccount?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetEvents?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetBlockHeader?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetCollection?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendPing?: (ix: Interaction, context: IContext, opts: IOptsCommon) => void\n  sendGetBlock?: (ix: Interaction, context: IContext, opts: IOptsCommon) => void\n  sendGetNetworkParameters?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  connectSubscribeEvents?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetNodeVersionInfo?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n}\n\nexport const send = async (\n  ix: Interaction | Promise<Interaction>,\n  context: IContext,\n  opts: IOpts = {}\n) => {\n  invariant(\n    Boolean(opts?.node),\n    `SDK Send Error: Either opts.node or \"accessNode.api\" in config must be defined.`\n  )\n  invariant(Boolean(context.ix), `SDK Send Error: context.ix must be defined.`)\n\n  ix = await ix\n\n  // prettier-ignore\n  switch (true) {\n    case context.ix.isTransaction(ix):\n      return opts.sendTransaction ? opts.sendTransaction(ix, context, opts) : sendTransaction(ix, context, opts)\n    case context.ix.isGetTransactionStatus(ix):\n      return opts.sendGetTransactionStatus ? opts.sendGetTransactionStatus(ix, context, opts) : sendGetTransactionStatus(ix, context, opts)\n    case context.ix.isGetTransaction(ix):\n      return opts.sendGetTransaction ? opts.sendGetTransaction(ix, context, opts) : sendGetTransaction(ix, context, opts)\n    case context.ix.isScript(ix):\n      return opts.sendExecuteScript ? opts.sendExecuteScript(ix, context, opts) : sendExecuteScript(ix, context, opts)\n    case context.ix.isGetAccount(ix):\n      return opts.sendGetAccount ? opts.sendGetAccount(ix, context, opts) : sendGetAccount(ix, context, opts)\n    case context.ix.isGetEvents(ix):\n      return opts.sendGetEvents ? opts.sendGetEvents(ix, context, opts) : sendGetEvents(ix, context, opts)\n    case context.ix.isSubscribeEvents?.(ix):\n      return opts.connectSubscribeEvents ? opts.connectSubscribeEvents(ix, context, opts) : connectSubscribeEvents(ix, context, opts)\n    case context.ix.isGetBlock(ix):\n      return opts.sendGetBlock ? opts.sendGetBlock(ix, context, opts) : sendGetBlock(ix, context, opts)\n    case context.ix.isGetBlockHeader(ix):\n      return opts.sendGetBlockHeader ? opts.sendGetBlockHeader(ix, context, opts) : sendGetBlockHeader(ix, context, opts)\n    case context.ix.isGetCollection(ix):\n      return opts.sendGetCollection ? opts.sendGetCollection(ix, context, opts) : sendGetCollection(ix, context, opts)\n    case context.ix.isPing(ix):\n      return opts.sendPing ? opts.sendPing(ix, context, opts) : sendPing(ix, context, opts)\n    case context.ix.isGetNetworkParameters(ix):\n      return opts.sendGetNetworkParameters ? opts.sendGetNetworkParameters(ix, context, opts) : sendGetNetworkParameters(ix, context, opts)\n    case context.ix.isGetNodeVersionInfo?.(ix):\n      return opts.sendGetNodeVersionInfo ? opts.sendGetNodeVersionInfo(ix, context, opts) : sendGetNodeVersionInfo(ix, context, opts)\n    default:\n      return ix\n  }\n}\n","export enum Action {\n  LIST_SUBSCRIPTIONS = \"list_subscriptions\",\n  SUBSCRIBE = \"subscribe\",\n  UNSUBSCRIBE = \"unsubscribe\",\n}\nexport interface BaseMessageRequest {\n  action: Action\n  subscription_id: string\n}\n\nexport interface BaseMessageResponse {\n  action?: Action\n  error?: {\n    code: number\n    message: string\n  }\n  subscription_id: string\n}\n\nexport interface ListSubscriptionsMessageRequest extends BaseMessageRequest {\n  action: Action.LIST_SUBSCRIPTIONS\n}\n\nexport interface ListSubscriptionsMessageResponse extends BaseMessageResponse {\n  action: Action.LIST_SUBSCRIPTIONS\n  subscriptions?: SubscriptionEntry[]\n}\n\nexport interface SubscribeMessageRequest extends BaseMessageRequest {\n  action: Action.SUBSCRIBE\n  topic: string\n  arguments: Record<string, any>\n}\n\nexport interface SubscribeMessageResponse extends BaseMessageResponse {\n  action: Action.SUBSCRIBE\n  topic: string\n}\n\nexport interface UnsubscribeMessageRequest extends BaseMessageRequest {\n  action: Action.UNSUBSCRIBE\n}\n\nexport type UnsubscribeMessageResponse = BaseMessageResponse & {\n  action: Action.UNSUBSCRIBE\n  id: string\n}\n\nexport type SubscriptionEntry = {\n  id: string\n  topic: string\n  arguments: Record<string, any>\n}\n\nexport type MessageRequest =\n  | ListSubscriptionsMessageRequest\n  | SubscribeMessageRequest\n  | UnsubscribeMessageRequest\n\nexport type MessageResponse =\n  | ListSubscriptionsMessageResponse\n  | SubscribeMessageResponse\n  | UnsubscribeMessageResponse\n\nexport type SubscriptionDataMessage = {\n  subscription_id: string\n  payload: any\n}\nexport class SocketError extends Error {\n  code: number\n\n  private constructor(code: number, message: string) {\n    super(message)\n    this.name = \"SocketError\"\n    this.code = code\n  }\n\n  static fromMessage(error: {code: number; message: string}) {\n    return new SocketError(error.code, error.message)\n  }\n}\n","import {\n  Action,\n  MessageRequest,\n  MessageResponse,\n  SocketError,\n  SubscriptionDataMessage,\n  UnsubscribeMessageResponse,\n} from \"./models\"\nimport {Subscription} from \"@onflow/typedefs\"\nimport {WebSocket} from \"./websocket\"\nimport {DataSubscriber, SubscriptionHandler} from \"./handlers/types\"\nimport * as logger from \"@onflow/util-logger\"\n\nconst WS_OPEN = 1\n\ntype DeepRequired<T> = Required<{\n  [K in keyof T]: DeepRequired<T[K]>\n}>\n\ntype InferHandler<T> = T extends SubscriptionHandler<infer H> ? H : never\n\ninterface SubscriptionInfo<ArgsDto = any, DataDto = any> {\n  // ID for the subscription\n  id: string\n  // The topic of the subscription\n  topic: string\n  // Data provider for the subscription\n  subscriber: DataSubscriber<ArgsDto, DataDto>\n}\n\nexport interface SubscriptionManagerConfig {\n  /**\n   * The URL of the node to connect to\n   */\n  node: string\n  /**\n   * Options for reconnecting to the server\n   */\n  reconnectOptions?: {\n    /**\n     * The initial delay in milliseconds before reconnecting\n     * @default 500\n     */\n    initialReconnectDelay?: number\n    /**\n     * The maximum number of reconnection attempts\n     * @default 5\n     */\n    reconnectAttempts?: number\n    /**\n     * The maximum delay in milliseconds between reconnection attempts\n     * @default 5000\n     */\n    maxReconnectDelay?: number\n  }\n}\n\nexport class SubscriptionManager<Handlers extends SubscriptionHandler<any>[]> {\n  private counter = 0\n  private socket: WebSocket | null = null\n  private subscriptions: SubscriptionInfo[] = []\n  private config: DeepRequired<SubscriptionManagerConfig>\n  private reconnectAttempts = 0\n  private handlers: SubscriptionHandler<any>[]\n  private connectPromise: Promise<void> | null = null\n  private closeConnection: (() => void) | null = null\n\n  constructor(handlers: Handlers, config: SubscriptionManagerConfig) {\n    this.config = {\n      ...config,\n      reconnectOptions: {\n        initialReconnectDelay: 500,\n        reconnectAttempts: 5,\n        maxReconnectDelay: 5000,\n        ...config.reconnectOptions,\n      },\n    }\n    this.handlers = handlers\n  }\n\n  subscribe<T extends Handlers[number]>(opts: {\n    topic: InferHandler<T>[\"Topic\"]\n    args: InferHandler<T>[\"Args\"]\n    onData: (data: InferHandler<T>[\"Data\"]) => void\n    onError: (error: Error) => void\n  }): Subscription {\n    const idPromise = this._subscribe(opts)\n\n    return {\n      unsubscribe: () => {\n        // Unsubscribe when the ID is available\n        idPromise.then(id => id && this.unsubscribe(id))\n      },\n    }\n  }\n\n  private async _subscribe<T extends Handlers[number]>(opts: {\n    topic: InferHandler<T>[\"Topic\"]\n    args: InferHandler<T>[\"Args\"]\n    onData: (data: InferHandler<T>[\"Data\"]) => void\n    onError: (error: Error) => void\n  }): Promise<string | null> {\n    // Get the data provider for the topic\n    const topicHandler = this.getHandler(opts.topic)\n    const subscriber = topicHandler.createSubscriber(\n      opts.args,\n      opts.onData,\n      opts.onError\n    )\n\n    let sub: SubscriptionInfo | null = null\n    try {\n      // Connect the socket if it's not already open\n      await this.connect()\n\n      // Track the subscription locally\n      sub = {\n        id: String(this.counter++),\n        topic: opts.topic,\n        subscriber: subscriber,\n      }\n      this.subscriptions.push(sub)\n\n      // Send the subscribe message\n      const response = await this.sendSubscribe(sub)\n      if (response.error) {\n        throw new Error(`Failed to subscribe to topic ${sub.topic}`, {\n          cause: SocketError.fromMessage(response.error),\n        })\n      }\n    } catch (e) {\n      // Unsubscribe if there was an error\n      subscriber.onError(e instanceof Error ? e : new Error(String(e)))\n      if (sub) this.unsubscribe(sub.id)\n      return null\n    }\n\n    return sub.id\n  }\n\n  private unsubscribe(id: string): void {\n    // Get the subscription\n    const sub = this.subscriptions.find(sub => sub.id === id)\n    if (!sub) return\n\n    // Remove the subscription\n    this.subscriptions = this.subscriptions.filter(sub => sub.id !== id)\n\n    // Close the socket if there are no more subscriptions\n    if (this.subscriptions.length === 0) {\n      this.closeConnection?.()\n      return\n    }\n\n    // Otherwise, the unsubscribe message\n    this.sendUnsubscribe(sub).catch(e => {\n      console.error(`Error while unsubscribing from topic: ${e}`)\n    })\n  }\n\n  // Lazy connect to the socket when the first subscription is made\n  private async connect() {\n    if (this.connectPromise) {\n      return this.connectPromise\n    }\n    this.connectPromise = new Promise<void>((resolve, reject) => {\n      // If the socket is already open, do nothing\n      if (this.socket?.readyState === WS_OPEN) {\n        resolve()\n        return\n      }\n\n      this.socket = new WebSocket(this.config.node)\n      const onMessage = (event: MessageEvent) => {\n        const message = JSON.parse(event.data) as\n          | MessageResponse\n          | SubscriptionDataMessage\n\n        // Error message\n        if (\"action\" in message && message.error) {\n          const sub = this.subscriptions.find(\n            sub => sub.id === message.subscription_id\n          )\n          if (sub) {\n            sub.subscriber.onError(\n              new Error(\n                `Failed to subscribe to topic ${sub.topic}: ${message.error.message}`\n              )\n            )\n            // Remove the subscription\n            this.subscriptions = this.subscriptions.filter(\n              sub => sub.id !== message.subscription_id\n            )\n          }\n          return\n        }\n\n        const sub = this.subscriptions.find(\n          sub => sub.id === message.subscription_id\n        )\n        if (sub) {\n          if (!(\"action\" in message) && message.subscription_id === sub.id) {\n            sub.subscriber.onData(message.payload)\n          }\n        }\n      }\n      const onClose = () => {\n        this.handleSocketError(new Error(\"WebSocket closed\"))\n          .then(() => {\n            resolve()\n          })\n          .catch(e => {\n            reject(e)\n          })\n      }\n      const onOpen = () => {\n        resolve()\n      }\n\n      this.socket.addEventListener(\"message\", onMessage)\n      this.socket.addEventListener(\"close\", onClose)\n      this.socket.addEventListener(\"open\", onOpen)\n\n      this.closeConnection = () => {\n        this.socket?.removeEventListener(\"message\", onMessage)\n        this.socket?.removeEventListener(\"close\", onClose)\n        this.socket?.removeEventListener(\"open\", onOpen)\n\n        this.socket?.close()\n        this.socket = null\n        this.closeConnection = null\n        this.connectPromise = null\n      }\n    })\n\n    return this.connectPromise\n  }\n\n  private async handleSocketError(error: any) {\n    // Cleanup the connection\n    this.closeConnection?.()\n\n    // Validate the number of reconnection attempts\n    if (\n      ++this.reconnectAttempts >= this.config.reconnectOptions.reconnectAttempts\n    ) {\n      logger.log({\n        level: logger.LEVELS.error,\n        title: \"WebSocket Error\",\n        message: `Failed to reconnect to the server after ${this.reconnectAttempts + 1} attempts: ${error}`,\n      })\n\n      this.subscriptions.forEach(sub => {\n        sub.subscriber.onError(\n          new Error(\n            `Failed to reconnect to the server after ${this.reconnectAttempts + 1} attempts: ${error}`\n          )\n        )\n      })\n      this.subscriptions = []\n      this.reconnectAttempts = 0\n\n      throw error\n    } else {\n      logger.log({\n        level: logger.LEVELS.warn,\n        title: \"WebSocket Error\",\n        message: `WebSocket error, reconnecting in ${this.backoffInterval}ms: ${error}`,\n      })\n\n      // Delay the reconnection\n      await new Promise(resolve => setTimeout(resolve, this.backoffInterval))\n\n      // Try to reconnect\n      await this.connect()\n\n      // Restore subscriptions\n      await Promise.all(\n        this.subscriptions.map(async sub => {\n          await this.sendSubscribe(sub).catch(e => {\n            sub.subscriber.onError(\n              new Error(`Failed to restore subscription: ${e}`)\n            )\n            // Remove the subscription\n            this.subscriptions = this.subscriptions.filter(s => s.id !== sub.id)\n          })\n        })\n      )\n\n      this.reconnectAttempts = 0\n    }\n  }\n\n  private async sendSubscribe(sub: SubscriptionInfo) {\n    // Send the subscription message\n    const request: MessageRequest = {\n      action: Action.SUBSCRIBE,\n      topic: sub.topic,\n      arguments: sub.subscriber.getConnectionArgs(),\n      subscription_id: String(sub.id),\n    }\n\n    const response = await this.request(request)\n    if (response.error) {\n      throw new Error(`Failed to subscribe to topic ${sub.topic}`, {\n        cause: SocketError.fromMessage(response.error),\n      })\n    }\n    return response\n  }\n\n  private async sendUnsubscribe(sub: SubscriptionInfo) {\n    // Send the unsubscribe message if the subscription has a remote id\n    const request: MessageRequest = {\n      action: Action.UNSUBSCRIBE,\n      subscription_id: sub.id,\n    }\n    this.socket?.send(JSON.stringify(request))\n\n    const response: UnsubscribeMessageResponse = (await this.request(\n      request\n    )) as UnsubscribeMessageResponse\n    if (response.error) {\n      throw new Error(`Failed to unsubscribe from topic ${sub.topic}`, {\n        cause: SocketError.fromMessage(response.error),\n      })\n    }\n\n    return response\n  }\n\n  private async request(request: MessageRequest): Promise<MessageResponse> {\n    let cleanup = () => {}\n\n    return await new Promise<MessageResponse>((resolve, reject) => {\n      if (!this.socket) {\n        reject(new Error(\"WebSocket is not connected\"))\n        return\n      }\n\n      // Set the cleanup function to remove the event listeners\n      cleanup = () => {\n        this.socket?.removeEventListener(\"error\", onError)\n        this.socket?.removeEventListener(\"message\", onMessage)\n        this.socket?.removeEventListener(\"close\", onClose)\n      }\n\n      // Bind event listeners\n      this.socket.addEventListener(\"error\", onError)\n      this.socket.addEventListener(\"message\", onMessage)\n      this.socket.addEventListener(\"close\", onClose)\n\n      // Send the request\n      this.socket.send(JSON.stringify(request))\n\n      function onError(e: WebSocketEventMap[\"error\"]) {\n        reject(new Error(`WebSocket error: ${e}`))\n      }\n\n      function onClose() {\n        reject(new Error(\"WebSocket closed\"))\n      }\n\n      function onMessage(event: MessageEvent) {\n        const data = JSON.parse(event.data) as MessageResponse\n        if (data.subscription_id === request.subscription_id) {\n          resolve(data)\n        }\n      }\n    }).finally(() => {\n      cleanup()\n    })\n  }\n\n  private getHandler(topic: string) {\n    const handler = this.handlers.find(handler => handler.topic === topic)\n    if (!handler) {\n      throw new Error(`No handler found for topic ${topic}`)\n    }\n    return handler\n  }\n\n  /**\n   * Calculate the backoff interval for reconnection attempts\n   * @returns The backoff interval in milliseconds\n   */\n  private get backoffInterval() {\n    return Math.min(\n      this.config.reconnectOptions.maxReconnectDelay,\n      this.config.reconnectOptions.initialReconnectDelay *\n        2 ** this.reconnectAttempts\n    )\n  }\n}\n","export interface SubscriptionHandler<\n  T extends {\n    Topic: string\n    Args: any\n    Data: any\n    ArgsDto: any\n    DataDto: any\n  },\n> {\n  readonly topic: T[\"Topic\"]\n  createSubscriber(\n    initialArgs: T[\"Args\"],\n    onData: (data: T[\"Data\"]) => void,\n    onError: (error: Error) => void\n  ): DataSubscriber<T[\"ArgsDto\"], T[\"DataDto\"]>\n}\n\nexport interface DataSubscriber<ArgsDto, DataDto> {\n  /**\n   * The callback to call when a data is received\n   */\n  onData(data: DataDto): void\n\n  /**\n   * The callback to call when an error is received\n   */\n  onError(error: Error): void\n\n  /**\n   * Get the arguments to connect or reconnect to the subscription\n   */\n  getConnectionArgs(): ArgsDto\n}\n\nexport function createSubscriptionHandler<\n  T extends {\n    Topic: string\n    Args: any\n    Data: any\n    ArgsDto: any\n    DataDto: any\n  },\n>(handler: SubscriptionHandler<T>): SubscriptionHandler<T> {\n  return handler\n}\n\nexport type BlockArgsDto =\n  | {\n      block_status?: \"finalized\" | \"sealed\"\n      start_block_id?: string\n    }\n  | {\n      block_status?: \"finalized\" | \"sealed\"\n      start_block_height?: number\n    }\n","import {\n  RawSubscriptionData,\n  SubscriptionArgs,\n  SubscriptionTopic,\n} from \"@onflow/typedefs\"\nimport {createSubscriptionHandler, BlockArgsDto} from \"./types\"\n\ntype BlocksArgs = SubscriptionArgs<SubscriptionTopic.BLOCKS>\n\ntype BlocksData = RawSubscriptionData<SubscriptionTopic.BLOCKS>\n\ntype BlocksDataDto = {\n  header: {\n    id: string\n    parent_id: string\n    height: string\n    timestamp: string\n    parent_voter_signature: string\n  }\n  payload: {\n    collection_guarantees: {\n      collection_id: string\n      signer_indices: string[]\n    }[]\n    block_seals: {\n      block_id: string\n      result_id: string\n    }[]\n  }\n}\n\nexport const blocksHandler = createSubscriptionHandler<{\n  Topic: SubscriptionTopic.BLOCKS\n  Args: BlocksArgs\n  Data: BlocksData\n  ArgsDto: BlockArgsDto\n  DataDto: BlocksDataDto\n}>({\n  topic: SubscriptionTopic.BLOCKS,\n  createSubscriber: (initialArgs, onData, onError) => {\n    let resumeArgs: BlocksArgs = {\n      ...initialArgs,\n    }\n\n    return {\n      onData(data: BlocksDataDto) {\n        // Parse the raw data\n        const parsedData: BlocksData = {\n          block: {\n            id: data.header.id,\n            parentId: data.header.parent_id,\n            height: Number(data.header.height),\n            timestamp: data.header.timestamp,\n            parentVoterSignature: data.header.parent_voter_signature,\n            collectionGuarantees: data.payload.collection_guarantees.map(\n              guarantee => ({\n                collectionId: guarantee.collection_id,\n                signerIds: guarantee.signer_indices,\n              })\n            ),\n            blockSeals: data.payload.block_seals.map(seal => ({\n              blockId: seal.block_id,\n              executionReceiptId: seal.result_id,\n            })),\n          },\n        }\n\n        // Update the resume args\n        resumeArgs = {\n          blockStatus: resumeArgs.blockStatus,\n          startBlockHeight: Number(BigInt(data.header.height) + BigInt(1)),\n        }\n\n        onData(parsedData)\n      },\n      onError(error: Error) {\n        onError(error)\n      },\n      getConnectionArgs() {\n        let encodedArgs: BlockArgsDto = {\n          block_status: resumeArgs.blockStatus,\n        }\n\n        if (\"startBlockHeight\" in resumeArgs && resumeArgs.startBlockHeight) {\n          return {\n            ...encodedArgs,\n            start_block_height: String(resumeArgs.startBlockHeight),\n          }\n        }\n\n        if (\"startBlockId\" in resumeArgs && resumeArgs.startBlockId) {\n          return {\n            ...encodedArgs,\n            start_block_id: resumeArgs.startBlockId,\n          }\n        }\n\n        return encodedArgs\n      },\n    }\n  },\n})\n","import {\n  SubscriptionArgs,\n  RawSubscriptionData,\n  SubscriptionTopic,\n} from \"@onflow/typedefs\"\nimport {BlockArgsDto, createSubscriptionHandler} from \"./types\"\n\ntype BlockHeadersArgs = SubscriptionArgs<SubscriptionTopic.BLOCK_HEADERS>\n\ntype BlockHeadersData = RawSubscriptionData<SubscriptionTopic.BLOCK_HEADERS>\n\ntype BlockHeadersArgsDto = BlockArgsDto\n\ntype BlockHeadersDataDto = {\n  id: string\n  parent_id: string\n  height: string\n  timestamp: string\n  parent_voter_signature: string\n}\n\nexport const blockHeadersHandler = createSubscriptionHandler<{\n  Topic: SubscriptionTopic.BLOCK_HEADERS\n  Args: BlockHeadersArgs\n  Data: BlockHeadersData\n  ArgsDto: BlockHeadersArgsDto\n  DataDto: BlockHeadersDataDto\n}>({\n  topic: SubscriptionTopic.BLOCK_HEADERS,\n  createSubscriber: (initialArgs, onData, onError) => {\n    let resumeArgs: BlockHeadersArgs = {\n      ...initialArgs,\n    }\n\n    return {\n      onData(data: BlockHeadersDataDto) {\n        // Parse the raw data\n        const parsedData: BlockHeadersData = {\n          blockHeader: {\n            id: data.id,\n            parentId: data.parent_id,\n            height: Number(data.height),\n            timestamp: data.timestamp,\n            parentVoterSignature: data.parent_voter_signature,\n          },\n        }\n\n        // Update the resume args\n        resumeArgs = {\n          blockStatus: resumeArgs.blockStatus,\n          startBlockHeight: Number(BigInt(data.height) + BigInt(1)),\n        }\n\n        onData(parsedData)\n      },\n      onError(error: Error) {\n        onError(error)\n      },\n      getConnectionArgs() {\n        let encodedArgs: BlockHeadersArgsDto = {\n          block_status: resumeArgs.blockStatus,\n        }\n\n        if (\"startBlockHeight\" in resumeArgs && resumeArgs.startBlockHeight) {\n          return {\n            ...encodedArgs,\n            start_block_height: resumeArgs.startBlockHeight,\n          }\n        }\n\n        if (\"startBlockId\" in resumeArgs && resumeArgs.startBlockId) {\n          return {\n            ...encodedArgs,\n            start_block_id: resumeArgs.startBlockId,\n          }\n        }\n\n        return encodedArgs\n      },\n    }\n  },\n})\n","import {\n  SubscriptionTopic,\n  SubscriptionArgs,\n  RawSubscriptionData,\n} from \"@onflow/typedefs\"\nimport {BlockArgsDto, createSubscriptionHandler} from \"./types\"\n\ntype BlockDigestsArgs = SubscriptionArgs<SubscriptionTopic.BLOCK_DIGESTS>\n\ntype BlockDigestsData = RawSubscriptionData<SubscriptionTopic.BLOCK_DIGESTS>\n\ntype BlockDigestsDataDto = {\n  block_id: string\n  height: string\n  timestamp: string\n}\n\ntype BlockDigestsArgsDto = BlockArgsDto\n\nexport const blockDigestsHandler = createSubscriptionHandler<{\n  Topic: SubscriptionTopic.BLOCK_DIGESTS\n  Args: BlockDigestsArgs\n  Data: BlockDigestsData\n  ArgsDto: BlockDigestsArgsDto\n  DataDto: BlockDigestsDataDto\n}>({\n  topic: SubscriptionTopic.BLOCK_DIGESTS,\n  createSubscriber: (initialArgs, onData, onError) => {\n    let resumeArgs: BlockDigestsArgs = {\n      ...initialArgs,\n    }\n\n    return {\n      onData(data: BlockDigestsDataDto) {\n        // Parse the raw data\n        const parsedData: BlockDigestsData = {\n          blockDigest: {\n            id: data.block_id,\n            height: Number(data.height),\n            timestamp: data.timestamp,\n          },\n        }\n\n        // Update the resume args\n        resumeArgs = {\n          blockStatus: resumeArgs.blockStatus,\n          startBlockId: String(BigInt(data.height) + BigInt(1)),\n        }\n\n        onData(parsedData)\n      },\n      onError(error: Error) {\n        onError(error)\n      },\n      getConnectionArgs() {\n        let encodedArgs: BlockDigestsArgsDto = {\n          block_status: resumeArgs.blockStatus,\n        }\n\n        if (\"startBlockHeight\" in resumeArgs && resumeArgs.startBlockHeight) {\n          return {\n            ...encodedArgs,\n            start_block_height: resumeArgs.startBlockHeight,\n          }\n        }\n\n        if (\"startBlockId\" in resumeArgs && resumeArgs.startBlockId) {\n          return {\n            ...encodedArgs,\n            start_block_id: resumeArgs.startBlockId,\n          }\n        }\n\n        return encodedArgs\n      },\n    }\n  },\n})\n","import {\n  RawSubscriptionData,\n  SubscriptionArgs,\n  SubscriptionTopic,\n} from \"@onflow/typedefs\"\nimport {createSubscriptionHandler} from \"./types\"\n\ntype AccountStatusesArgs = SubscriptionArgs<SubscriptionTopic.ACCOUNT_STATUSES>\n\ntype AccountStatusesData =\n  RawSubscriptionData<SubscriptionTopic.ACCOUNT_STATUSES>\n\ntype AccountStatusesArgsDto = {\n  start_block_id?: string\n  start_block_height?: number\n  event_types?: string[]\n  addresses?: string[]\n  account_addresses?: string[]\n}\n\ntype AccountStatusesDataDto = {\n  block_id: string\n  height: string\n  account_events: {\n    [address: string]: {\n      type: string\n      transaction_id: string\n      transaction_index: string\n      event_index: string\n      payload: string\n    }[]\n  }\n  message_index: string\n}\n\nexport const accountStatusesHandler = createSubscriptionHandler<{\n  Topic: SubscriptionTopic.ACCOUNT_STATUSES\n  Args: AccountStatusesArgs\n  Data: AccountStatusesData\n  ArgsDto: AccountStatusesArgsDto\n  DataDto: AccountStatusesDataDto\n}>({\n  topic: SubscriptionTopic.ACCOUNT_STATUSES,\n  createSubscriber: (initialArgs, onData, onError) => {\n    let resumeArgs: AccountStatusesArgs = {\n      ...initialArgs,\n    }\n\n    return {\n      onData(rawData: AccountStatusesDataDto) {\n        const data: AccountStatusesData[] = []\n        for (const [address, events] of Object.entries(\n          rawData.account_events\n        )) {\n          for (const event of events) {\n            // Parse the raw data\n            const parsedData: AccountStatusesData = {\n              accountStatusEvent: {\n                accountAddress: address,\n                blockId: rawData.block_id,\n                blockHeight: Number(rawData.height),\n                type: event.type,\n                transactionId: event.transaction_id,\n                transactionIndex: Number(event.transaction_index),\n                eventIndex: Number(event.event_index),\n                payload: JSON.parse(\n                  Buffer.from(event.payload, \"base64\").toString()\n                ),\n              },\n            }\n\n            data.push(parsedData)\n          }\n\n          // Sort the messages by increasing message index\n          data.sort((a, b) => {\n            const txIndexDiff =\n              a.accountStatusEvent.transactionIndex -\n              b.accountStatusEvent.transactionIndex\n            if (txIndexDiff !== 0) return txIndexDiff\n\n            return (\n              a.accountStatusEvent.eventIndex - b.accountStatusEvent.eventIndex\n            )\n          })\n\n          // Emit the messages\n          for (const message of data) {\n            onData(message)\n          }\n\n          // Update the resume args\n          resumeArgs = {\n            ...resumeArgs,\n            startBlockHeight: Number(BigInt(rawData.height) + BigInt(1)),\n            startBlockId: undefined,\n          }\n        }\n      },\n      onError(error: Error) {\n        onError(error)\n      },\n      getConnectionArgs() {\n        let encodedArgs: AccountStatusesArgsDto = {\n          event_types: resumeArgs.eventTypes,\n          addresses: resumeArgs.addresses,\n          account_addresses: resumeArgs.accountAddresses,\n        }\n\n        if (\"startBlockHeight\" in resumeArgs && resumeArgs.startBlockHeight) {\n          return {\n            ...encodedArgs,\n            start_block_height: resumeArgs.startBlockHeight,\n          }\n        }\n\n        if (\"startBlockId\" in resumeArgs && resumeArgs.startBlockId) {\n          return {\n            ...encodedArgs,\n            start_block_id: resumeArgs.startBlockId,\n          }\n        }\n\n        return encodedArgs\n      },\n    }\n  },\n})\n","import {\n  RawSubscriptionData,\n  SubscriptionArgs,\n  SubscriptionTopic,\n} from \"@onflow/typedefs\"\nimport {createSubscriptionHandler} from \"./types\"\nimport {Buffer} from \"buffer\"\n\nconst STATUS_MAP = {\n  UNKNOWN: 0,\n  PENDING: 1,\n  FINALIZED: 2,\n  EXECUTED: 3,\n  SEALED: 4,\n  EXPIRED: 5,\n}\n\ntype TransactionStatusesArgs =\n  SubscriptionArgs<SubscriptionTopic.TRANSACTION_STATUSES>\n\ntype TransactionStatusesData =\n  RawSubscriptionData<SubscriptionTopic.TRANSACTION_STATUSES>\n\ntype TransactionStatusesArgsDto = {\n  tx_id: string\n}\n\ntype TransactionStatusesDataDto = {\n  transaction_result: {\n    block_id: string\n    collection_id: string\n    execution: string\n    status: string\n    status_code: 0 | 1\n    error_message: string\n    computation_used: string\n    events: {\n      type: string\n      transaction_id: string\n      transaction_index: string\n      event_index: string\n      payload: string\n    }[]\n  }\n}\n\nexport const transactionStatusesHandler = createSubscriptionHandler<{\n  Topic: SubscriptionTopic.TRANSACTION_STATUSES\n  Args: TransactionStatusesArgs\n  Data: TransactionStatusesData\n  ArgsDto: TransactionStatusesArgsDto\n  DataDto: TransactionStatusesDataDto\n}>({\n  topic: SubscriptionTopic.TRANSACTION_STATUSES,\n  createSubscriber: (initialArgs, onData, onError) => {\n    let resumeArgs: TransactionStatusesArgs = {\n      ...initialArgs,\n    }\n\n    return {\n      onData(data: TransactionStatusesDataDto) {\n        // Parse the raw data\n        const parsedData: TransactionStatusesData = {\n          transactionStatus: {\n            blockId: data.transaction_result.block_id,\n            status:\n              STATUS_MAP[\n                data.transaction_result.status.toUpperCase() as keyof typeof STATUS_MAP\n              ],\n            statusString: data.transaction_result.status.toUpperCase(),\n            statusCode: data.transaction_result.status_code,\n            errorMessage: data.transaction_result.error_message,\n            events: data.transaction_result.events.map(event => ({\n              type: event.type,\n              transactionId: event.transaction_id,\n              transactionIndex: Number(event.transaction_index),\n              eventIndex: Number(event.event_index),\n              payload: JSON.parse(\n                Buffer.from(event.payload, \"base64\").toString()\n              ),\n            })),\n          },\n        }\n\n        onData(parsedData)\n      },\n      onError(error: Error) {\n        onError(error)\n      },\n      getConnectionArgs() {\n        return {\n          tx_id: resumeArgs.transactionId,\n        }\n      },\n    }\n  },\n})\n","import {\n  SubscriptionTopic,\n  SubscriptionArgs,\n  RawSubscriptionData,\n} from \"@onflow/typedefs\"\nimport {createSubscriptionHandler} from \"./types\"\n\ntype EventsArgs = SubscriptionArgs<SubscriptionTopic.EVENTS>\n\ntype EventsData = RawSubscriptionData<SubscriptionTopic.EVENTS>\n\nexport type EventsArgsDto = (\n  | {\n      start_block_id: string\n    }\n  | {\n      start_block_height: number\n    }\n  | {}\n) & {\n  event_types?: string[]\n  addresses?: string[]\n  contracts?: string[]\n}\n\ntype EventsDataDto = {\n  block_id: string\n  block_height: string\n  block_timestamp: string\n  events: {\n    type: string\n    transaction_id: string\n    transaction_index: string\n    event_index: string\n    payload: string\n  }[]\n}\n\nexport const eventsHandler = createSubscriptionHandler<{\n  Topic: SubscriptionTopic.EVENTS\n  Args: EventsArgs\n  Data: EventsData\n  ArgsDto: EventsArgsDto\n  DataDto: EventsDataDto\n}>({\n  topic: SubscriptionTopic.EVENTS,\n  createSubscriber: (initialArgs, onData, onError) => {\n    let resumeArgs: EventsArgs = {\n      ...initialArgs,\n    }\n\n    return {\n      onData(rawData: EventsDataDto) {\n        for (const event of rawData.events) {\n          // Parse the raw data\n          const result: EventsData = {\n            event: {\n              blockId: rawData.block_id,\n              blockHeight: Number(rawData.block_height),\n              blockTimestamp: rawData.block_timestamp,\n              type: event.type,\n              transactionId: event.transaction_id,\n              transactionIndex: Number(event.transaction_index),\n              eventIndex: Number(event.event_index),\n              payload: JSON.parse(\n                Buffer.from(event.payload, \"base64\").toString()\n              ),\n            },\n          }\n\n          onData(result)\n        }\n\n        // Update the resume args\n        resumeArgs = {\n          ...resumeArgs,\n          startHeight: Number(BigInt(rawData.block_height) + BigInt(1)),\n          startBlockId: undefined,\n        }\n      },\n      onError(error: Error) {\n        onError(error)\n      },\n      getConnectionArgs() {\n        let encodedArgs: EventsArgsDto = {\n          event_types: resumeArgs.eventTypes,\n          addresses: resumeArgs.addresses,\n          contracts: resumeArgs.contracts,\n        }\n\n        if (\"startBlockHeight\" in resumeArgs && resumeArgs.startBlockHeight) {\n          return {\n            ...encodedArgs,\n            start_block_height: resumeArgs.startBlockHeight,\n          }\n        }\n\n        if (\"startBlockId\" in resumeArgs && resumeArgs.startBlockId) {\n          return {\n            ...encodedArgs,\n            start_block_id: resumeArgs.startBlockId,\n          }\n        }\n\n        return encodedArgs\n      },\n    }\n  },\n})\n","import {\n  SubscriptionTopic,\n  SubscriptionArgs,\n  Subscription,\n  RawSubscriptionData,\n} from \"@onflow/typedefs\"\nimport {SubscriptionManager} from \"./subscription-manager\"\nimport {blocksHandler} from \"./handlers/blocks\"\nimport {blockHeadersHandler} from \"./handlers/block-headers\"\nimport {blockDigestsHandler} from \"./handlers/block-digests\"\nimport {accountStatusesHandler} from \"./handlers/account-statuses\"\nimport {transactionStatusesHandler} from \"./handlers/transaction-statuses\"\nimport {eventsHandler} from \"./handlers/events\"\nimport {combineURLs} from \"../utils/combine-urls\"\n\nconst SUBSCRIPTION_HANDLERS = [\n  blocksHandler,\n  blockHeadersHandler,\n  blockDigestsHandler,\n  accountStatusesHandler,\n  transactionStatusesHandler,\n  eventsHandler,\n]\n\n// Map of SubscriptionManager instances by access node URL\nlet subscriptionManagerMap: Map<\n  string,\n  SubscriptionManager<typeof SUBSCRIPTION_HANDLERS>\n> = new Map()\n\nexport function subscribe<T extends SubscriptionTopic>(\n  {\n    topic,\n    args,\n    onData,\n    onError,\n  }: {\n    topic: T\n    args: SubscriptionArgs<T>\n    onData: (data: RawSubscriptionData<T>) => void\n    onError: (error: Error) => void\n  },\n  opts: {node: string}\n): Subscription {\n  // Get the SubscriptionManager instance for the access node, or create a new one\n  const node = getWsUrl(opts.node)\n  const manager =\n    subscriptionManagerMap.get(node) ||\n    new SubscriptionManager(SUBSCRIPTION_HANDLERS, {node})\n  subscriptionManagerMap.set(node, manager)\n\n  return manager.subscribe({\n    topic,\n    args,\n    onData: onData as any,\n    onError,\n  })\n}\n\nfunction getWsUrl(node: string) {\n  const url = new URL(combineURLs(node, \"/v1/ws\"))\n  if (url.protocol === \"https:\") {\n    url.protocol = \"wss:\"\n  } else if (url.protocol === \"http:\") {\n    url.protocol = \"ws:\"\n  }\n  return url.toString()\n}\n","import {SdkTransport} from \"@onflow/typedefs\"\nimport {send} from \"./send/send-http\"\nimport {subscribe} from \"./subscribe/subscribe\"\n\nexport const httpTransport: SdkTransport = {\n  send,\n  subscribe,\n}\n"],"names":["safeParseJSON","data","JSON","parse","combineURLs","baseURL","relativeURL","replace","AbortController","globalThis","require","HTTPRequestError","Error","constructor","_ref","error","hostname","path","method","requestBody","responseBody","responseStatusText","statusCode","msg","name","errorMessage","httpRequest","_ref2","body","headers","retryLimit","retryIntervalMs","timeoutLimit","enableRequestLogging","bodyJSON","stringify","makeRequest","controller","fetchTimeout","setTimeout","abort","fetchTransport","toString","signal","then","res","ok","json","responseText","text","catch","response","message","statusText","status","e","logger","log","title","level","LEVELS","finally","clearTimeout","requestLoop","retryAttempt","arguments","length","undefined","resp","retryStatusCodes","includes","Promise","resolve","reject","console","warn","sendExecuteScriptAtBlockIDRequest","ix","context","opts","defaultHttpRequest","node","block","id","script","Buffer","from","cadence","map","arg","asArgument","constructResponse","sendExecuteScriptAtBlockHeightRequest","height","sendExecuteScriptAtLatestBlockRequest","isSealed","ret","tag","encodedData","sendExecuteScript","invariant","HashAlgorithmIDs","SHA2_256","SHA2_384","SHA3_256","SHA3_384","KMAC128_BLS_BLS12_381","SignatureAlgorithmIDs","ECDSA_P256","ECDSA_secp256k1","BLS_BLS12_381","sendGetAccountAtBlockHeightRequest","account","addr","sendGetAccountAtLatestBlockRequest","unwrapContracts","contracts","c","key","Object","keys","address","balance","Number","code","index","publicKey","public_key","signAlgo","signing_algorithm","signAlgoString","hashAlgo","hashing_algorithm","hashAlgoString","sequenceNumber","sequence_number","weight","revoked","sendGetAccount","sendGetBlockHeaderByIDRequest","sendGetBlockHeaderByHeightRequest","sendGetLatestBlockHeaderRequest","blockHeader","header","parentId","parent_id","timestamp","sendGetBlockHeader","interactionHasBlockID","interactionHasBlockHeight","sendGetBlockByIDRequest","sendGetBlockByHeightRequest","sendGetBlockRequest","parentVoterSignature","parent_voter_signature","collectionGuarantees","payload","collection_guarantees","collectionGuarantee","collectionId","collection_id","signerIds","signer_ids","blockSeals","block_seals","blockSeal","blockId","block_id","executionReceiptId","result_id","sendGetBlock","sendGetCollection","collection","transactionIds","transactions","transaction","sendGetEventsForHeightRangeRequest","events","eventType","start","end","sendGetEventsForBlockIDsRequest","blockIds","join","forEach","event","push","blockHeight","block_height","blockTimestamp","block_timestamp","type","transactionId","transaction_id","transactionIndex","transaction_index","eventIndex","event_index","sendGetEvents","interactionContainsBlockHeightRange","interactionContainsBlockIDsList","Array","isArray","sendGetTransaction","unwrapKey","keyId","key_index","unwrapSignature","sig","signature","unwrapArg","args","referenceBlockId","reference_block_id","gasLimit","gas_limit","payer","proposalKey","proposal_key","authorizers","payloadSignatures","payload_signatures","envelopeSignatures","envelope_signatures","STATUS_MAP","UNKNOWN","PENDING","FINALIZED","EXECUTED","SEALED","EXPIRED","sendGetTransactionStatus","transactionStatus","toUpperCase","statusString","status_code","error_message","sendPing","Boolean","idof","acct","withPrefix","sendTransaction","values","accounts","role","sansPrefix","String","find","existingSignature","tempId","t1","Date","now","refBlock","computeLimit","proposer","sequenceNum","authorizations","reduce","prev","current","item","t2","window","CustomEvent","dispatchEvent","detail","txId","delta","sendGetNetworkParameters","networkParameters","chainId","chain_id","sendGetNodeVersionInfo","nodeVersionInfo","semver","commit","sporkId","spork_id","protocolVersion","parseInt","protocol_version","sporkRootBlockHeight","spork_root_block_height","nodeRootBlockHeight","node_root_block_height","WebSocket","_WebSocket","WebsocketError","reason","wasClean","connectWs","params","getParams","outputEmitter","EventEmitter","retryCount","resolveParams","close","connect","userClosed","hasOpened","url","buildConnectionUrl","ws","onmessage","emit","onclose","removeAllListeners","onopen","on","listener","off","URL","protocol","entries","_ref3","value","formattedValue","searchParams","append","constructData","Events","BlockID","Height","BlockTimestamp","Type","TransactionID","TransactionIndex","EventIndex","Payload","heartbeat","stream","streamConnection","connectSubscribeEvents","resolvedIx","defaultConnectWs","lastBlockHeight","connection","event_types","subscribeEvents","eventTypes","addresses","heartbeat_interval","heartbeatInterval","start_height","start_block_id","startBlockId","startHeight","responseData","responseStream","send","isTransaction","isGetTransactionStatus","isGetTransaction","isScript","isGetAccount","isGetEvents","isSubscribeEvents","isGetBlock","isGetBlockHeader","isGetCollection","isPing","isGetNetworkParameters","isGetNodeVersionInfo","Action","SocketError","fromMessage","WS_OPEN","SubscriptionManager","counter","socket","subscriptions","reconnectAttempts","connectPromise","closeConnection","handlers","config","reconnectOptions","initialReconnectDelay","maxReconnectDelay","subscribe","idPromise","_subscribe","unsubscribe","topicHandler","getHandler","topic","subscriber","createSubscriber","onData","onError","sub","sendSubscribe","cause","filter","sendUnsubscribe","readyState","onMessage","subscription_id","onClose","handleSocketError","onOpen","addEventListener","removeEventListener","backoffInterval","all","s","request","action","SUBSCRIBE","getConnectionArgs","UNSUBSCRIBE","cleanup","handler","Math","min","createSubscriptionHandler","blocksHandler","SubscriptionTopic","BLOCKS","initialArgs","resumeArgs","parsedData","guarantee","signer_indices","seal","blockStatus","startBlockHeight","BigInt","encodedArgs","block_status","start_block_height","blockHeadersHandler","BLOCK_HEADERS","blockDigestsHandler","BLOCK_DIGESTS","blockDigest","accountStatusesHandler","ACCOUNT_STATUSES","rawData","account_events","accountStatusEvent","accountAddress","sort","a","b","txIndexDiff","account_addresses","accountAddresses","transactionStatusesHandler","TRANSACTION_STATUSES","transaction_result","tx_id","eventsHandler","EVENTS","result","SUBSCRIPTION_HANDLERS","subscriptionManagerMap","Map","getWsUrl","manager","get","set","httpTransport"],"mappings":"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"}